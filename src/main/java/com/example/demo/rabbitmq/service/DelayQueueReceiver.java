package com.example.demo.rabbitmq.service;import com.rabbitmq.client.Channel;import lombok.extern.slf4j.Slf4j;import org.springframework.amqp.core.Message;import org.springframework.amqp.rabbit.annotation.RabbitHandler;import org.springframework.amqp.rabbit.annotation.RabbitListener;import org.springframework.amqp.rabbit.core.RabbitTemplate;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import java.io.IOException;import java.util.Arrays;/** * @description: 延迟消息消费者（接受信息） * @author: Mr.monster.liu * @create: 2021-09-07 13:49 **/@Component@Slf4jpublic class DelayQueueReceiver {    @Autowired    private DelayQueueService delayQueueService;    //@RabbitHandler    /*@RabbitListener(queues = "mall.order.cancel.ttl")    public void handle(Message testMessage, Channel channel) throws IOException {        log.info("handle receive delay message orderNo:{}"+testMessage.getMessageProperties().getDeliveryTag(),testMessage);        delayQueueService.sendDelayOrderCancel(new String(testMessage.getBody()));        delayQueueService.sendDelayOrderQueue(new String(testMessage.getBody()));        channel.basicAck(testMessage.getMessageProperties().getDeliveryTag(), true);    }*/    /*@RabbitListener(queues = "delay.msg.send")    public void delayMsgSendQueue(Message testMessage, Channel channel) throws IOException {        System.out.println("delay.msg.send消费者收到消息  : "+testMessage.getMessageProperties().getDeliveryTag() + testMessage.toString());        channel.basicAck(testMessage.getMessageProperties().getDeliveryTag(), true);    }*/    /*@RabbitListener(queues = "delay.email.send")    public void delayEmailSend(Message testMessage, Channel channel) throws IOException {        System.out.println("delay.email.send消费者收到消息  : "+testMessage.getMessageProperties().getDeliveryTag() + testMessage.toString());       // Integer s = 1/0;        channel.basicAck(testMessage.getMessageProperties().getDeliveryTag(), false);    }*/}