package com.example.demo.rabbitmq.service;import com.example.demo.rabbitmq.RabbitMqEnum;import com.rabbitmq.client.Channel;import org.springframework.amqp.core.Message;import org.springframework.amqp.rabbit.annotation.RabbitListener;import org.springframework.amqp.rabbit.core.RabbitTemplate;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import java.io.IOException;/** * @description: 扇形交换机监听 * @author: Mr.monster.liu * @create: 2021-06-07 16:20 **/@Componentpublic class FanoutReceiver {    @Autowired    private RabbitTemplate rabbitTemplate;    @RabbitListener(queues = "fanout.queue.a")    public void TopicExchangeQueueA(Message testMessage, Channel channel) throws IOException {        System.out.println("fanout.queue.a消费者收到消息  : " + testMessage.toString());        channel.basicAck(testMessage.getMessageProperties().getDeliveryTag(), true);    }    @RabbitListener(queues = "fanout.queue.b")    public void TopicExchangeQueueB(Message testMessage, Channel channel) throws IOException {        System.out.println("fanout.queue.b消费者收到消息  : " + testMessage.toString());        channel.basicAck(testMessage.getMessageProperties().getDeliveryTag(), true);    }    @RabbitListener(queues = "fanout.queue.c")    public void TopicExchangeQueueC(Message testMessage, Channel channel) throws IOException {        System.out.println("fanout.queue.c消费者收到消息  : " + testMessage.toString());        channel.basicAck(testMessage.getMessageProperties().getDeliveryTag(), true);        //rabbitTemplate.convertAndSend(RabbitMqEnum.FanoutExchange.getName(),"fanout.queue.c",testMessage);    }}