//package com.example.demo.rabbitmq;////import org.springframework.amqp.core.Binding;//import org.springframework.amqp.core.BindingBuilder;//import org.springframework.amqp.core.FanoutExchange;//import org.springframework.amqp.core.Queue;//import org.springframework.context.annotation.Bean;//import org.springframework.context.annotation.Configuration;/////**// * @description: rabbit扇形交换机（建议用于一个队列多个消费者消费的场景,对于需要重新加入消息队列的不能直接加入，需要额外处理）// * @author: Mr.monster.liu// * @create: 2021-06-07 16:03// **/////@Configuration//public class FanoutRabbitConfig {////    @Bean//    public Queue queueA() {//        return new Queue(RabbitMqEnum.FanoutQueueA.getName());//    }////    @Bean//    public Queue queueB() {//        return new Queue(RabbitMqEnum.FanoutQueueB.getName());//    }//////    @Bean//    public Queue queueC() {//        return new Queue(RabbitMqEnum.FanoutQueueC.getName());//    }//////    @Bean//    FanoutExchange fanoutExchange() {//        return new FanoutExchange(RabbitMqEnum.FanoutExchange.getName());//    }////    @Bean//    Binding bindingExchangeA() {//        return BindingBuilder.bind(queueA()).to(fanoutExchange());//    }//////    @Bean//    Binding bindingExchangeB() {//        return BindingBuilder.bind(queueB()).to(fanoutExchange());//    }////    @Bean//    Binding bindingExchangeC() {//        return BindingBuilder.bind(queueC()).to(fanoutExchange());//    }//////////}